name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      # 환경변수를 안전하게 관리하기 위해 GitHub Secrets 사용
      DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

    - name: Build and push backend Docker image
      run: |
        docker buildx build --platform linux/amd64,linux/arm64 -t ${DOCKER_REGISTRY_URL}/springboot-web:latest ./backend
        docker push ${DOCKER_REGISTRY_URL}/springboot-web:latest

    - name: Build and push frontend Docker image
      run: |
        docker buildx build --platform linux/amd64,linux/arm64 -t ${DOCKER_REGISTRY_URL}/flutter-web:latest ./frontend
        docker push ${DOCKER_REGISTRY_URL}/flutter-web:latest

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          # Pull the latest images
          docker pull ${DOCKER_REGISTRY_URL}/springboot-web:latest
          docker pull ${DOCKER_REGISTRY_URL}/flutter-web:latest

          # Restart the containers using docker-compose
          cd /home/ec2-user
          docker compose -f docker-compose.prod.yml down
          docker compose -f docker-compose.prod.yml up --build
